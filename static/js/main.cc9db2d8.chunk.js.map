{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","i","Math","ceil","push","lastPage","length","className","cn","disabled","href","onClick","map","el","items","from","to","numbers","n","getNumbers","App","useState","setPerPage","setCurrentPage","currentItems","splice","getCurrentItems","firstItem","split","lastItem","message","value","id","onChange","event","target","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"sPAUaA,EAA8B,SAAC,GAQ1C,IAHK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAuB,GAEpBC,EAAI,EAAGA,GAAKC,KAAKC,MAAMP,GAASC,GAAUI,GAAK,EACtDD,EAAWI,KAAKH,GAGlB,IAAMI,EAAWL,EAAWM,OAE5B,OACE,mCACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAA0B,IAAhBX,IADZ,SAIE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBZ,EACfa,QAAS,WACPZ,EAAaD,EAAc,IAN/B,oBAaD,UAAIE,GAAYY,KAAI,SAAAC,GAAE,OACrB,oBACEN,UAAS,oBAAeM,IAAOf,GAAe,UADhD,SAIE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMZ,EAAac,IAJ9B,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IAAG,YAAa,CAC7BC,SAAUX,IAAgBO,IAD5B,SAIE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeZ,IAAgBO,EAC/BM,QAAS,WACPZ,EAAaD,EAAc,IAN/B,0BC1DJgB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQb,KAAKc,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBP,KAAI,SAACM,GAAD,qBAAuBA,MAUvB,IAAME,EAAgB,WAC3B,MAA8BC,mBAAS,KAAvC,mBAAOxB,EAAP,KAAgByB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOvB,EAAP,KAAoByB,EAApB,KACMC,EAXR,SAAyB1B,EAAoBD,GAC3C,OAAoB,IAAhBC,EACK,YAAIgB,GAAOW,OAAO,EAAG5B,GAGvB,YAAIiB,GAAOW,QAAQ3B,EAAc,GAAKD,EAASA,GAMvB6B,EAAiB5B,GAAcD,GACxD8B,EAAYH,EAAa,GAAGI,MAAM,KAAK,GACvCC,EAAWL,EAAaA,EAAalB,OAAS,GAAGsB,MAAM,KAAK,GAC5DE,EAAO,eAAWhC,EAAX,mBAAiC6B,EAAjC,cAAgDE,EAAhD,WAEb,OACE,sBAAKtB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACGuB,IAGH,sBAAKvB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACEwB,MAAOlC,EACP,UAAQ,kBACRmC,GAAG,kBACHzB,UAAU,eACV0B,SAAU,SAACC,GACTZ,EAAWY,EAAMC,OAAOJ,OACxBR,EAAe,IAPnB,UAUE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEX,MAAM,KACNC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACsC,GACbd,EAAec,MAInB,6BACG,YAAIb,GAAcZ,KAAI,SAAAC,GAAE,OACvB,oBAAI,UAAQ,OAAZ,SAA6BA,GAALA,YEjElCyB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cc9db2d8.chunk.js","sourcesContent":["import './Pagination.css';\nimport cn from 'classnames';\n\ntype Props = {\n  total: string;\n  perPage: string;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages: number[] = [];\n\n  for (let i = 1; i <= Math.ceil(+total / +perPage); i += 1) {\n    totalPages.push(i);\n  }\n\n  const lastPage = totalPages.length;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => {\n              onPageChange(currentPage - 1);\n            }}\n          >\n            «\n          </a>\n        </li>\n\n        {[...totalPages].map(el => (\n          <li\n            className={`page-item ${el === currentPage && 'active'}`}\n            key={el}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${el}`}\n              onClick={() => onPageChange(el)}\n            >\n              {el}\n            </a>\n          </li>\n        ))}\n\n        <li className={cn('page-item', {\n          disabled: currentPage === lastPage,\n        })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === lastPage}\n            onClick={() => {\n              onPageChange(currentPage + 1);\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map((n: number) => `Item ${n}`);\n\nfunction getCurrentItems(currentPage:number, perPage: number): string[] {\n  if (currentPage === 1) {\n    return [...items].splice(0, perPage);\n  }\n\n  return [...items].splice((currentPage - 1) * perPage, perPage);\n}\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState('5');\n  const [currentPage, setCurrentPage] = useState(1);\n  const currentItems: string[] = getCurrentItems(+currentPage, +perPage);\n  const firstItem = currentItems[0].split(' ')[1];\n  const lastItem = currentItems[currentItems.length - 1].split(' ')[1];\n  const message = `Page ${currentPage} (items ${firstItem} - ${lastItem} of 42)`;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {message}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={perPage}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => {\n              setPerPage(event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total=\"42\"\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => {\n          setCurrentPage(page);\n        }}\n      />\n\n      <ul>\n        {[...currentItems].map(el => (\n          <li data-cy=\"item\" key={el}>{el}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}